! function(a) {
	if ("object" == typeof exports && "undefined" != typeof module) {
		module.exports = a()
	} else {
		if ("function" == typeof define && define.amd) {
			define([], a)
		} else {
			("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" !=
				typeof self ? self : this).Parallax = a()
		}
	}
}(function() {
	return function a(b, c, d) {
		function f(k, e) {
			if (!c[k]) {
				if (!b[k]) {
					var j = "function" == typeof require && require;
					if (!e && j) {
						return j(k, !0)
					}
					if (h) {
						return h(k, !0)
					}
					var i = new Error("Cannot find module '" + k + "'");
					throw i.code = "MODULE_NOT_FOUND", i
				}
				var m = c[k] = {
					exports: {}
				};
				b[k][0].call(m.exports, function(n) {
					var l = b[k][1][n];
					return f(l || n)
				}, m, m.exports, a, b, c, d)
			}
			return c[k].exports
		}
		for (var h = "function" == typeof require && require, g = 0; g < d.length; g++) {
			f(d[g])
		}
		return f
	}({
		1: [function(j, b, c) {
			function d(e) {
				if (null === e || void 0 === e) {
					throw new TypeError("Object.assign cannot be called with null or undefined")
				}
				return Object(e)
			}
			var f = Object.getOwnPropertySymbols,
				h = Object.prototype.hasOwnProperty,
				g = Object.prototype.propertyIsEnumerable;
			b.exports = function() {
				try {
					if (!Object.assign) {
						return !1
					}
					var o = new String("abc");
					if (o[5] = "de", "5" === Object.getOwnPropertyNames(o)[0]) {
						return !1
					}
					for (var k = {}, l = 0; l < 10; l++) {
						k["_" + String.fromCharCode(l)] = l
					}
					if ("0123456789" !== Object.getOwnPropertyNames(k).map(function(e) {
							return k[e]
						}).join("")) {
						return !1
					}
					var m = {};
					return "abcdefghijklmnopqrst".split("").forEach(function(e) {
						m[e] = e
					}), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, m)).join(
						"")
				} catch (o) {
					return !1
				}
			}() ? Object.assign : function(r, n) {
				for (var p, k, q = d(r), o = 1; o < arguments.length; o++) {
					p = Object(arguments[o]);
					for (var s in p) {
						h.call(p, s) && (q[s] = p[s])
					}
					if (f) {
						k = f(p);
						for (var m = 0; m < k.length; m++) {
							g.call(p, k[m]) && (q[k[m]] = p[k[m]])
						}
					}
				}
				return q
			}
		}, {}],
		2: [function(d, b, c) {
			(function(e) {
				(function() {
					var g, h, j, l, k, f;
					"undefined" != typeof performance && null !== performance && performance
						.now ? b.exports = function() {
							return performance.now()
						} : void 0 !== e && null !== e && e.hrtime ? (b.exports =
					function() {
							return (g() - k) / 1000000
						}, h = e.hrtime, l = (g = function() {
							var i;
							return 1000000000 * (i = h())[0] + i[1]
						})(), f = 1000000000 * e.uptime(), k = l - f) : Date.now ? (b
							.exports = function() {
								return Date.now() - j
							}, j = Date.now()) : (b.exports = function() {
							return (new Date).getTime() - j
						}, j = (new Date).getTime())
				}).call(this)
			}).call(this, d("_process"))
		}, {
			_process: 3
		}],
		3: [function(G, k, x) {
			function B() {
				throw new Error("setTimeout has not been defined")
			}

			function C() {
				throw new Error("clearTimeout has not been defined")
			}

			function F(d) {
				if (g === setTimeout) {
					return setTimeout(d, 0)
				}
				if ((g === B || !g) && setTimeout) {
					return g = setTimeout, setTimeout(d, 0)
				}
				try {
					return g(d, 0)
				} catch (c) {
					try {
						return g.call(null, d, 0)
					} catch (c) {
						return g.call(this, d, 0)
					}
				}
			}

			function E(d) {
				if (j === clearTimeout) {
					return clearTimeout(d)
				}
				if ((j === C || !j) && clearTimeout) {
					return j = clearTimeout, clearTimeout(d)
				}
				try {
					return j(d)
				} catch (c) {
					try {
						return j.call(null, d)
					} catch (c) {
						return j.call(this, d)
					}
				}
			}

			function b() {
				I && D && (I = !1, D.length ? q = D.concat(q) : J = -1, q.length && z())
			}

			function z() {
				if (!I) {
					var d = F(b);
					I = !0;
					for (var c = q.length; c;) {
						for (D = q, q = []; ++J < c;) {
							D && D[J].run()
						}
						J = -1, c = q.length
					}
					D = null, I = !1, E(d)
				}
			}

			function w(d, c) {
				this.fun = d, this.array = c
			}

			function H() {}
			var g, j, A = k.exports = {};
			! function() {
				try {
					g = "function" == typeof setTimeout ? setTimeout : B
				} catch (c) {
					g = B
				}
				try {
					j = "function" == typeof clearTimeout ? clearTimeout : C
				} catch (c) {
					j = C
				}
			}();
			var D, q = [],
				I = !1,
				J = -1;
			A.nextTick = function(f) {
					var c = new Array(arguments.length - 1);
					if (arguments.length > 1) {
						for (var d = 1; d < arguments.length; d++) {
							c[d - 1] = arguments[d]
						}
					}
					q.push(new w(f, c)), 1 !== q.length || I || F(z)
				}, w.prototype.run = function() {
					this.fun.apply(null, this.array)
				}, A.title = "browser", A.browser = !0, A.env = {}, A.argv = [], A.version = "", A
				.versions = {}, A.on = H, A.addListener = H, A.once = H, A.off = H, A
				.removeListener = H, A.removeAllListeners = H, A.emit = H, A.prependListener = H, A
				.prependOnceListener = H, A.listeners = function(c) {
					return []
				}, A.binding = function(c) {
					throw new Error("process.binding is not supported")
				}, A.cwd = function() {
					return "/"
				}, A.chdir = function(c) {
					throw new Error("process.chdir is not supported")
				}, A.umask = function() {
					return 0
				}
		}, {}],
		4: [function(d, b, c) {
			(function(k) {
				for (var p = d("performance-now"), q = "undefined" == typeof window ? k :
						window, v = ["moz", "webkit"], t = "AnimationFrame", e = q["request" +
							t], m = q["cancel" + t] || q["cancelRequest" + t], j = 0; !e && j <
					v.length; j++) {
					e = q[v[j] + "Request" + t], m = q[v[j] + "Cancel" + t] || q[v[j] +
						"CancelRequest" + t]
				}
				if (!e || !m) {
					var w = 0,
						f = 0,
						g = [];
					e = function(n) {
						if (0 === g.length) {
							var h = p(),
								l = Math.max(0, 1000 / 60 - (h - w));
							w = l + h, setTimeout(function() {
								var o = g.slice(0);
								g.length = 0;
								for (var i = 0; i < o.length; i++) {
									if (!o[i].cancelled) {
										try {
											o[i].callback(w)
										} catch (o) {
											setTimeout(function() {
												throw o
											}, 0)
										}
									}
								}
							}, Math.round(l))
						}
						return g.push({
							handle: ++f,
							callback: n,
							cancelled: !1
						}), f
					}, m = function(i) {
						for (var h = 0; h < g.length; h++) {
							g[h].handle === i && (g[h].cancelled = !0)
						}
					}
				}
				b.exports = function(h) {
					return e.call(q, h)
				}, b.exports.cancel = function() {
					m.apply(q, arguments)
				}, b.exports.polyfill = function() {
					q.requestAnimationFrame = e, q.cancelAnimationFrame = m
				}
			}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ?
				self : "undefined" != typeof window ? window : {})
		}, {
			"performance-now": 2
		}],
		5: [function(q, c, f) {
			function j(i, h) {
				if (!(i instanceof h)) {
					throw new TypeError("Cannot call a class as a function")
				}
			}
			var k = function() {
					function e(r, h) {
						for (var l = 0; l < h.length; l++) {
							var o = h[l];
							o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o &&
								(o.writable = !0), Object.defineProperty(r, o.key, o)
						}
					}
					return function(h, l, o) {
						return l && e(h.prototype, l), o && e(h, o), h
					}
				}(),
				p = q("raf"),
				m = q("object-assign"),
				b = {
					propertyCache: {},
					vendors: [null, ["-webkit-", "webkit"],
						["-moz-", "Moz"],
						["-o-", "O"],
						["-ms-", "ms"]
					],
					clamp: function(n, h, l) {
						return h < l ? n < h ? h : n > l ? l : n : n < l ? l : n > h ? h : n
					},
					data: function(i, h) {
						return b.deserialize(i.getAttribute("data-" + h))
					},
					deserialize: function(e) {
						return "true" === e || "false" !== e && ("null" === e ? null : !isNaN(
							parseFloat(e)) && isFinite(e) ? parseFloat(e) : e)
					},
					camelCase: function(e) {
						return e.replace(/-+(.)?/g, function(i, h) {
							return h ? h.toUpperCase() : ""
						})
					},
					accelerate: function(e) {
						b.css(e, "transform", "translate3d(0,0,0) rotate(0.0001deg)"), b.css(e,
							"transform-style", "preserve-3d"), b.css(e,
							"backface-visibility", "hidden")
					},
					transformSupport: function(G) {
						for (var x = document.createElement("div"), z = !1, C = null, D = !1,
								F = null, E = null, A = 0, y = b.vendors.length; A < y; A++) {
							if (null !== b.vendors[A] ? (F = b.vendors[A][0] + "transform", E =
									b.vendors[A][1] + "Transform") : (F = "transform", E =
									"transform"), void 0 !== x.style[E]) {
								z = !0;
								break
							}
						}
						switch (G) {
							case "2D":
								D = z;
								break;
							case "3D":
								if (z) {
									var H = document.body || document.createElement("body"),
										v = document.documentElement,
										w = v.style.overflow,
										B = !1;
									document.body || (B = !0, v.style.overflow = "hidden", v
											.appendChild(H), H.style.overflow = "hidden", H
											.style.background = ""), H.appendChild(x), x.style[
											E] = "translate3d(1px,1px,1px)", D = void 0 !== (C =
											window.getComputedStyle(x).getPropertyValue(F)) && C
										.length > 0 && "none" !== C, v.style.overflow = w, H
										.removeChild(x), B && (H.removeAttribute("style"), H
											.parentNode.removeChild(H))
								}
						}
						return D
					},
					css: function(w, h, l) {
						var r = b.propertyCache[h];
						if (!r) {
							for (var u = 0, v = b.vendors.length; u < v; u++) {
								if (r = null !== b.vendors[u] ? b.camelCase(b.vendors[u][1] +
										"-" + h) : h, void 0 !== w.style[r]) {
									b.propertyCache[h] = r;
									break
								}
							}
						}
						w.style[r] = l
					}
				},
				g = {
					relativeInput: !1,
					clipRelativeInput: !1,
					inputElement: null,
					hoverOnly: !1,
					calibrationThreshold: 100,
					calibrationDelay: 500,
					supportDelay: 500,
					calibrateX: !1,
					calibrateY: !0,
					invertX: !0,
					invertY: !0,
					limitX: !1,
					limitY: !1,
					scalarX: 10,
					scalarY: 10,
					frictionX: 0.1,
					frictionY: 0.1,
					originX: 0.5,
					originY: 0.5,
					pointerEvents: !1,
					precision: 1,
					onReady: null,
					selector: null
				},
				d = function() {
					function e(h, l) {
						j(this, e), this.element = h;
						var n = {
							calibrateX: b.data(this.element, "calibrate-x"),
							calibrateY: b.data(this.element, "calibrate-y"),
							invertX: b.data(this.element, "invert-x"),
							invertY: b.data(this.element, "invert-y"),
							limitX: b.data(this.element, "limit-x"),
							limitY: b.data(this.element, "limit-y"),
							scalarX: b.data(this.element, "scalar-x"),
							scalarY: b.data(this.element, "scalar-y"),
							frictionX: b.data(this.element, "friction-x"),
							frictionY: b.data(this.element, "friction-y"),
							originX: b.data(this.element, "origin-x"),
							originY: b.data(this.element, "origin-y"),
							pointerEvents: b.data(this.element, "pointer-events"),
							precision: b.data(this.element, "precision"),
							relativeInput: b.data(this.element, "relative-input"),
							clipRelativeInput: b.data(this.element, "clip-relative-input"),
							hoverOnly: b.data(this.element, "hover-only"),
							inputElement: document.querySelector(b.data(this.element,
								"input-element")),
							selector: b.data(this.element, "selector")
						};
						for (var r in n) {
							null === n[r] && delete n[r]
						}
						m(this, g, n, l), this.inputElement || (this.inputElement = this.element),
							this.calibrationTimer = null, this.calibrationFlag = !0, this
							.enabled = !1, this.depthsX = [], this.depthsY = [], this.raf = null,
							this.bounds = null, this.elementPositionX = 0, this.elementPositionY =
							0, this.elementWidth = 0, this.elementHeight = 0, this.elementCenterX =
							0, this.elementCenterY = 0, this.elementRangeX = 0, this.elementRangeY =
							0, this.calibrationX = 0, this.calibrationY = 0, this.inputX = 0, this
							.inputY = 0, this.motionX = 0, this.motionY = 0, this.velocityX = 0,
							this.velocityY = 0, this.onMouseMove = this.onMouseMove.bind(this), this
							.onDeviceOrientation = this.onDeviceOrientation.bind(this), this
							.onDeviceMotion = this.onDeviceMotion.bind(this), this
							.onOrientationTimer = this.onOrientationTimer.bind(this), this
							.onMotionTimer = this.onMotionTimer.bind(this), this
							.onCalibrationTimer = this.onCalibrationTimer.bind(this), this
							.onAnimationFrame = this.onAnimationFrame.bind(this), this
							.onWindowResize = this.onWindowResize.bind(this), this.windowWidth =
							null, this.windowHeight = null, this.windowCenterX = null, this
							.windowCenterY = null, this.windowRadiusX = null, this.windowRadiusY =
							null, this.portrait = !1, this.desktop = !navigator.userAgent.match(
								/(iPhone|iPod|iPad|Android|BlackBerry|BB10|mobi|tablet|opera mini|nexus 7)/i
								), this.motionSupport = !!window.DeviceMotionEvent && !this.desktop,
							this.orientationSupport = !!window.DeviceOrientationEvent && !this
							.desktop, this.orientationStatus = 0, this.motionStatus = 0, this
							.initialise()
					}
					return k(e, [{
						key: "initialise",
						value: function() {
							void 0 === this.transform2DSupport && (this
									.transform2DSupport = b.transformSupport("2D"),
									this.transform3DSupport = b.transformSupport(
										"3D")), this.transform3DSupport && b
								.accelerate(this.element), "static" === window
								.getComputedStyle(this.element).getPropertyValue(
									"position") && (this.element.style.position =
									"relative"), this.pointerEvents || (this.element
									.style.pointerEvents = "none"), this
								.updateLayers(), this.updateDimensions(), this
								.enable(), this.queueCalibration(this
									.calibrationDelay)
						}
					}, {
						key: "doReadyCallback",
						value: function() {
							this.onReady && this.onReady()
						}
					}, {
						key: "updateLayers",
						value: function() {
							this.selector ? this.layers = this.element
								.querySelectorAll(this.selector) : this.layers =
								this.element.children, this.layers.length || console
								.warn(
									"ParallaxJS: Your scene does not have any layers."
									), this.depthsX = [], this.depthsY = [];
							for (var n = 0; n < this.layers.length; n++) {
								var h = this.layers[n];
								this.transform3DSupport && b.accelerate(h), h.style
									.position = n ? "absolute" : "relative", h.style
									.display = "block", h.style.left = 0, h.style
									.top = 0;
								var l = b.data(h, "depth") || 0;
								this.depthsX.push(b.data(h, "depth-x") || l), this
									.depthsY.push(b.data(h, "depth-y") || l)
							}
						}
					}, {
						key: "updateDimensions",
						value: function() {
							this.windowWidth = window.innerWidth, this
								.windowHeight = window.innerHeight, this
								.windowCenterX = this.windowWidth * this.originX,
								this.windowCenterY = this.windowHeight * this
								.originY, this.windowRadiusX = Math.max(this
									.windowCenterX, this.windowWidth - this
									.windowCenterX), this.windowRadiusY = Math.max(
									this.windowCenterY, this.windowHeight - this
									.windowCenterY)
						}
					}, {
						key: "updateBounds",
						value: function() {
							this.bounds = this.inputElement.getBoundingClientRect(),
								this.elementPositionX = this.bounds.left, this
								.elementPositionY = this.bounds.top, this
								.elementWidth = this.bounds.width, this
								.elementHeight = this.bounds.height, this
								.elementCenterX = this.elementWidth * this.originX,
								this.elementCenterY = this.elementHeight * this
								.originY, this.elementRangeX = Math.max(this
									.elementCenterX, this.elementWidth - this
									.elementCenterX), this.elementRangeY = Math.max(
									this.elementCenterY, this.elementHeight - this
									.elementCenterY)
						}
					}, {
						key: "queueCalibration",
						value: function(h) {
							clearTimeout(this.calibrationTimer), this
								.calibrationTimer = setTimeout(this
									.onCalibrationTimer, h)
						}
					}, {
						key: "enable",
						value: function() {
							this.enabled || (this.enabled = !0, this
								.orientationSupport ? (this.portrait = !1,
									window.addEventListener("deviceorientation",
										this.onDeviceOrientation), this
									.detectionTimer = setTimeout(this
										.onOrientationTimer, this.supportDelay)
									) : this.motionSupport ? (this.portrait = !
									1, window.addEventListener("devicemotion",
										this.onDeviceMotion), this
									.detectionTimer = setTimeout(this
										.onMotionTimer, this.supportDelay)) : (
									this.calibrationX = 0, this.calibrationY =
									0, this.portrait = !1, window
									.addEventListener("mousemove", this
										.onMouseMove), this.doReadyCallback()),
								window.addEventListener("resize", this
									.onWindowResize), this.raf = p(this
									.onAnimationFrame))
						}
					}, {
						key: "disable",
						value: function() {
							this.enabled && (this.enabled = !1, this
								.orientationSupport ? window
								.removeEventListener("deviceorientation", this
									.onDeviceOrientation) : this.motionSupport ?
								window.removeEventListener("devicemotion", this
									.onDeviceMotion) : window
								.removeEventListener("mousemove", this
									.onMouseMove), window.removeEventListener(
									"resize", this.onWindowResize), p.cancel(
									this.raf))
						}
					}, {
						key: "calibrate",
						value: function(i, h) {
							this.calibrateX = void 0 === i ? this.calibrateX : i,
								this.calibrateY = void 0 === h ? this.calibrateY : h
						}
					}, {
						key: "invert",
						value: function(i, h) {
							this.invertX = void 0 === i ? this.invertX : i, this
								.invertY = void 0 === h ? this.invertY : h
						}
					}, {
						key: "friction",
						value: function(i, h) {
							this.frictionX = void 0 === i ? this.frictionX : i, this
								.frictionY = void 0 === h ? this.frictionY : h
						}
					}, {
						key: "scalar",
						value: function(i, h) {
							this.scalarX = void 0 === i ? this.scalarX : i, this
								.scalarY = void 0 === h ? this.scalarY : h
						}
					}, {
						key: "limit",
						value: function(i, h) {
							this.limitX = void 0 === i ? this.limitX : i, this
								.limitY = void 0 === h ? this.limitY : h
						}
					}, {
						key: "origin",
						value: function(i, h) {
							this.originX = void 0 === i ? this.originX : i, this
								.originY = void 0 === h ? this.originY : h
						}
					}, {
						key: "setInputElement",
						value: function(h) {
							this.inputElement = h, this.updateDimensions()
						}
					}, {
						key: "setPosition",
						value: function(n, h, l) {
							h = h.toFixed(this.precision) + "px", l = l.toFixed(this
									.precision) + "px", this.transform3DSupport ? b
								.css(n, "transform", "translate3d(" + h + "," + l +
									",0)") : this.transform2DSupport ? b.css(n,
									"transform", "translate(" + h + "," + l + ")") :
								(n.style.left = h, n.style.top = l)
						}
					}, {
						key: "onOrientationTimer",
						value: function() {
							this.orientationSupport && 0 === this
								.orientationStatus ? (this.disable(), this
									.orientationSupport = !1, this.enable()) : this
								.doReadyCallback()
						}
					}, {
						key: "onMotionTimer",
						value: function() {
							this.motionSupport && 0 === this.motionStatus ? (this
								.disable(), this.motionSupport = !1, this
								.enable()) : this.doReadyCallback()
						}
					}, {
						key: "onCalibrationTimer",
						value: function() {
							this.calibrationFlag = !0
						}
					}, {
						key: "onWindowResize",
						value: function() {
							this.updateDimensions()
						}
					}, {
						key: "onAnimationFrame",
						value: function() {
							this.updateBounds();
							var A = this.inputX - this.calibrationX,
								s = this.inputY - this.calibrationY;
							(Math.abs(A) > this.calibrationThreshold || Math.abs(
								s) > this.calibrationThreshold) && this
								.queueCalibration(0), this.portrait ? (this
									.motionX = this.calibrateX ? s : this.inputY,
									this.motionY = this.calibrateY ? A : this.inputX
									) : (this.motionX = this.calibrateX ? A : this
									.inputX, this.motionY = this.calibrateY ? s :
									this.inputY), this.motionX *= this
								.elementWidth * (this.scalarX / 100), this
								.motionY *= this.elementHeight * (this.scalarY /
									100), isNaN(parseFloat(this.limitX)) || (this
									.motionX = b.clamp(this.motionX, -this.limitX,
										this.limitX)), isNaN(parseFloat(this
									.limitY)) || (this.motionY = b.clamp(this
									.motionY, -this.limitY, this.limitY)), this
								.velocityX += (this.motionX - this.velocityX) * this
								.frictionX, this.velocityY += (this.motionY - this
									.velocityY) * this.frictionY;
							for (var v = 0; v < this.layers.length; v++) {
								var x = this.layers[v],
									y = this.depthsX[v],
									z = this.depthsY[v],
									w = this.velocityX * (y * (this.invertX ? -1 :
										1)),
									u = this.velocityY * (z * (this.invertY ? -1 :
										1));
								this.setPosition(x, w, u)
							}
							this.raf = p(this.onAnimationFrame)
						}
					}, {
						key: "rotate",
						value: function(u, h) {
							var l = (u || 0) / 30,
								r = (h || 0) / 30,
								s = this.windowHeight > this.windowWidth;
							this.portrait !== s && (this.portrait = s, this
									.calibrationFlag = !0), this.calibrationFlag &&
								(this.calibrationFlag = !1, this.calibrationX = l,
									this.calibrationY = r), this.inputX = l, this
								.inputY = r
						}
					}, {
						key: "onDeviceOrientation",
						value: function(n) {
							var h = n.beta,
								l = n.gamma;
							null !== h && null !== l && (this.orientationStatus = 1,
								this.rotate(h, l))
						}
					}, {
						key: "onDeviceMotion",
						value: function(n) {
							var h = n.rotationRate.beta,
								l = n.rotationRate.gamma;
							null !== h && null !== l && (this.motionStatus = 1, this
								.rotate(h, l))
						}
					}, {
						key: "onMouseMove",
						value: function(n) {
							var h = n.clientX,
								l = n.clientY;
							if (this.hoverOnly && (h < this.elementPositionX || h >
									this.elementPositionX + this.elementWidth || l <
									this.elementPositionY || l > this
									.elementPositionY + this.elementHeight)) {
								return this.inputX = 0, void(this.inputY = 0)
							}
							this.relativeInput ? (this.clipRelativeInput && (h =
										Math.max(h, this.elementPositionX), h = Math
										.min(h, this.elementPositionX + this
											.elementWidth), l = Math.max(l, this
											.elementPositionY), l = Math.min(l, this
											.elementPositionY + this.elementHeight)
										), this.elementRangeX && this
									.elementRangeY && (this.inputX = (h - this
											.elementPositionX - this.elementCenterX
											) / this.elementRangeX, this.inputY = (
											l - this.elementPositionY - this
											.elementCenterY) / this.elementRangeY)
									) : this.windowRadiusX && this.windowRadiusY &&
								(this.inputX = (h - this.windowCenterX) / this
									.windowRadiusX, this.inputY = (l - this
										.windowCenterY) / this.windowRadiusY)
						}
					}, {
						key: "destroy",
						value: function() {
							this.disable(), clearTimeout(this.calibrationTimer),
								clearTimeout(this.detectionTimer), this.element
								.removeAttribute("style");
							for (var h = 0; h < this.layers.length; h++) {
								this.layers[h].removeAttribute("style")
							}
							delete this.element, delete this.layers
						}
					}, {
						key: "version",
						value: function() {
							return "3.1.0"
						}
					}]), e
				}();
			c.exports = d
		}, {
			"object-assign": 1,
			raf: 4
		}]
	}, {}, [5])(5)
});
